const chalk = require('chalk')

function splitFilename(filename) {
    return {
        filename: filename.replace(/(?:\.([^.]+))?$/.exec(filename)[0], ''),
        extension: /(?:\.([^.]+))?$/.exec(filename)[1]
    }
}

function TestResults() {
    this.totalTest = 0
    this.passed = {}
    this.failed = {}
    this.passedCount = 0
    this.failedCount = 0
    this.failedMessages = {}
}

function consolePrintTestResultsReportAndCallbackIfNeeded(testResults, callback) {
    console.log(chalk.cyan("Totally tested " + testResults.totalTest))
    console.log(chalk.green(testResults.passedCount + " passed"))
    console.log(chalk.red(testResults.failedCount + " failed"), 
                    testResults.failedCount > 0 ? testResults.failed : '',
                    testResults.failedCount > 0  ? '\n' : '',
                    testResults.failedCount > 0 ? chalk.bgRed('Detailed Report') : '',
                    testResults.failedCount > 0 ? JSON.stringify(testResults.failedMessages, null, 4) : ''
                )

    callback ? callback(testResults) : allDone()

    function allDone() {
        if (testResults.totalTest === testResults.passedCount) {
            console.log(chalk.bgGreen("---All Passed---"))
        }
        process.exit()
    }
}

function compareTwoOject(obj1, obj2) {
    let res = true
    Object.keys(obj1).forEach(key => {
        if (obj1[key] !== obj2[key]) {
            res = false
        }
    })
    if (res) {
        Object.keys(obj2).forEach(key => {
            if (obj2[key] !== obj1[key]) {
                res = false
            }
        })
    }
    return true
}

module.exports = {
    splitFilename,
    TestResults,
    consolePrintTestResultsReportAndCallbackIfNeeded,
    compareTwoOject,
}